package com.ewp.crm.controllers;

import com.ewp.crm.service.impl.VKService;
import com.ewp.crm.models.Role;
import com.ewp.crm.models.User;
import com.ewp.crm.service.interfaces.UserService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@PreAuthorize("hasAnyAuthority('ADMIN', 'OWNER', 'USER')")
@Controller
public class VkController {
    private final UserService userService;
    private VKService vkService;

    @Autowired
    public VkController(VKService vkService, UserService userService) {
        this.vkService = vkService;
        this.userService = userService;
    }

    @RequestMapping(value = "/vk-auth", method = RequestMethod.GET)
    public String vkAuthPage() {
        String uri = vkService.receivingTokenUri();
        return "redirect:" + uri;
    }

    String cont = "487000002, " +
            "487000003, " +
            "487000004, " +
            "487000005, " +
            "487000006, " +
            "487000007, " +
            "487000008, " +
            "487000009, " +
            "487000010, " +
            "487000011, " +
            "487000012, " +
            "487000013, " +
            "487000014, " +
            "487000015, " +
            "487000016, " +
            "487000017, " +
            "487000018, " +
            "487000019, " +
            "487000020, " +
            "487000021, " +
            "487000022, " +
            "487000023, " +
            "487000024, " +
            "487000025, " +
            "487000026, " +
            "487000027, " +
            "487000028, " +
            "487000029, " +
            "487000030, " +
            "487000031, " +
            "487000032, " +
            "487000033, " +
            "487000034, " +
            "487000035, " +
            "487000036, " +
            "487000037, " +
            "487000038, " +
            "487000039, " +
            "487000040, " +
            "487000041, " +
            "487000042, " +
            "487000043, " +
            "487000044, " +
            "487000045, " +
            "487000046, " +
            "487000047, " +
            "487000048, " +
            "487000049, " +
            "487000050, " +
            "487000051, " +
            "487000052, " +
            "487000053, " +
            "487000054, " +
            "487000055, " +
            "487000056, " +
            "487000057, " +
            "487000058, " +
            "487000059, " +
            "487000060, " +
            "487000061, " +
            "487000062, " +
            "487000063, " +
            "487000064, " +
            "487000065, " +
            "487000066, " +
            "487000067, " +
            "487000068, " +
            "487000069, " +
            "487000070, " +
            "487000071, " +
            "487000072, " +
            "487000073, " +
            "487000074, " +
            "487000075, " +
            "487000076, " +
            "487000077, " +
            "487000078, " +
            "487000079, " +
            "487000080, " +
            "487000081, " +
            "487000082, " +
            "487000083, " +
            "487000084, " +
            "487000085, " +
            "487000086, " +
            "487000087, " +
            "487000088, " +
            "487000089, " +
            "487000090, " +
            "487000091, " +
            "487000092, " +
            "487000093, " +
            "487000094, " +
            "487000095, " +
            "487000096, " +
            "487000097, " +
            "487000098, " +
            "487000099, " +
            "487000100, " +
            "487006701, " +
            "487006702, " +
            "487006703, " +
            "487006704, " +
            "487006705, " +
            "487006706, " +
            "487006707, " +
            "487006708, " +
            "487006709, " +
            "487006710, " +
            "487006711, " +
            "487006712, " +
            "487006713, " +
            "487006714, " +
            "487006715, " +
            "487006716, " +
            "487006717, " +
            "487006718, " +
            "487006719, " +
            "487006720, " +
            "487006721, " +
            "487006722, " +
            "487006723, " +
            "487006724, " +
            "487006725, " +
            "487006726, " +
            "487006727, " +
            "487006728, " +
            "487006729, " +
            "487006730, " +
            "487006731, " +
            "487006732, " +
            "487006733, " +
            "487006734, " +
            "487006735, " +
            "487006736, " +
            "487006737, " +
            "487006738, " +
            "487006739, " +
            "487006740, " +
            "487006741, " +
            "487006742, " +
            "487006743, " +
            "487006744, " +
            "487006745, " +
            "487006746, " +
            "487006747, " +
            "487006748, " +
            "487006749, " +
            "487006750, " +
            "487006751, " +
            "487006752, " +
            "487006753, " +
            "487006754, " +
            "487006755, " +
            "487006756, " +
            "487006757, " +
            "487006758, " +
            "487006759, " +
            "487006760, " +
            "487006761, " +
            "487006762, " +
            "487006763, " +
            "487006764, " +
            "487006765, " +
            "487006766, " +
            "487006767, " +
            "487006768, " +
            "487006769, " +
            "487006770, " +
            "487006771, " +
            "487006772, " +
            "487006773, " +
            "487006774, " +
            "487006775, " +
            "487006776, " +
            "487006777, " +
            "487006778, " +
            "487006779, " +
            "487006780, " +
            "487006781, " +
            "487006782, " +
            "487006783, " +
            "487006784, " +
            "487006785, " +
            "487006786, " +
            "487006787, " +
            "487006788, " +
            "487006789, " +
            "487006790, " +
            "487006791, " +
            "487006792, " +
            "487006793, " +
            "487006794, " +
            "487006795, " +
            "487006796, " +
            "487006797, " +
            "487006798, " +
            "487006799, " +
            "487006800, " +
            "487002801, " +
            "487002802, " +
            "487002803, " +
            "487002804, " +
            "487002805, " +
            "487002806, " +
            "487002807, " +
            "487002808, " +
            "487002809, " +
            "487002810, " +
            "487002811, " +
            "487002812, " +
            "487002813, " +
            "487002814, " +
            "487002815, " +
            "487002816, " +
            "487002817, " +
            "487002818, " +
            "487002819, " +
            "487002820, " +
            "487002821, " +
            "487002822, " +
            "487002823, " +
            "487002824, " +
            "487002825, " +
            "487002826, " +
            "487002827, " +
            "487002828, " +
            "487002829, " +
            "487002830, " +
            "487002831, " +
            "487002832, " +
            "487002833, " +
            "487002834, " +
            "487002835, " +
            "487002836, " +
            "487002837, " +
            "487002838, " +
            "487002839, " +
            "487002840, " +
            "487002841, " +
            "487002842, " +
            "487002843, " +
            "487002844, " +
            "487002845, " +
            "487002846, " +
            "487002847, " +
            "487002848, " +
            "487002849, " +
            "487002850, " +
            "487002851, " +
            "487002852, " +
            "487002853, " +
            "487002854, " +
            "487002855, " +
            "487002856, " +
            "487002857, " +
            "487002858, " +
            "487002859, " +
            "487002860, " +
            "487002861, " +
            "487002862, " +
            "487002863, " +
            "487002864, " +
            "487002865, " +
            "487002866, " +
            "487002867, " +
            "487002868, " +
            "487002869, " +
            "487002870, " +
            "487002871, " +
            "487002872, " +
            "487002873, " +
            "487002874, " +
            "487002875, " +
            "487002876, " +
            "487002877, " +
            "487002878, " +
            "487002879, " +
            "487002880, " +
            "487002881, " +
            "487002882, " +
            "487002883, " +
            "487002884, " +
            "487002885, " +
            "487002886, " +
            "487002887, " +
            "487002888, " +
            "487002889, " +
            "487002890, " +
            "487002891, " +
            "487002892, " +
            "487002893, " +
            "487002894, " +
            "487002895, " +
            "487002896, " +
            "487002897, " +
            "487002898, " +
            "487002899, " +
            "487002900, " +
            "161001002, " +
            "161001003, " +
            "161001004, " +
            "161001006, " +
            "161001007, " +
            "161001008, " +
            "161001009, " +
            "161001010, " +
            "161001011, " +
            "161001012, " +
            "161001013, " +
            "161001014, " +
            "161001015, " +
            "161001017, " +
            "161001018, " +
            "161001019, " +
            "161001020, " +
            "161001021, " +
            "161001022, " +
            "161001023, " +
            "161001024, " +
            "161001025, " +
            "161001026, " +
            "161001027, " +
            "161001028, " +
            "161001029, " +
            "161001030, " +
            "161001031, " +
            "161001032, " +
            "161001033, " +
            "161001034, " +
            "161001035, " +
            "161001036, " +
            "161001037, " +
            "161001038, " +
            "161001039, " +
            "161001040, " +
            "161001041, " +
            "161001042, " +
            "161001043, " +
            "161001044, " +
            "161001045, " +
            "161001046, " +
            "161001047, " +
            "161001048, " +
            "161001049, " +
            "161001051, " +
            "161001052, " +
            "161001053, " +
            "161001055, " +
            "161001056, " +
            "161001057, " +
            "161001058, " +
            "161001060, " +
            "161001061, " +
            "161001063, " +
            "161001064, " +
            "161001066, " +
            "161001067, " +
            "161001069, " +
            "161001071, " +
            "161001072, " +
            "161001073, " +
            "161001074, " +
            "161001075, " +
            "161001076, " +
            "161001077, " +
            "161001078, " +
            "161001079, " +
            "161001080, " +
            "161001081, " +
            "161001082, " +
            "161001084, " +
            "161001085, " +
            "161001087, " +
            "161001088, " +
            "161001089, " +
            "161001090, " +
            "161001091, " +
            "161001092, " +
            "161001093, " +
            "161001094, " +
            "161001095, " +
            "161001096, " +
            "161001097, " +
            "161001098, " +
            "161001099, " +
            "161001100";

    String remove = "161001028, " +
            "161001029, " +
            "161001030, " +
            "161001031, " +
            "161001032, " +
            "161001033, " +
            "161001034, " +
            "161001035, " +
            "161001036, " +
            "161001037, " +
            "161001038, " +
            "161001039, " +
            "161001040, " +
            "161001041, " +
            "161001042, " +
            "161001043, " +
            "161001044, " +
            "161001045, " +
            "161001046, " +
            "161001047, " +
            "161001048, " +
            "161001049, " +
            "161001051, " +
            "161001052, " +
            "161001053, " +
            "161001055, " +
            "161001056, " +
            "161001057, " +
            "161001058, " +
            "161001060, " +
            "161001061, " +
            "161001063, " +
            "161001064, " +
            "161001066, " +
            "161001067, " +
            "161001069, " +
            "161001071, " +
            "161001072, " +
            "161001073, " +
            "161001074, " +
            "161001075, " +
            "161001076, " +
            "161001077, " +
            "161001078, " +
            "161001079, " +
            "161001080, " +
            "161001081, " +
            "161001082, " +
            "161001084, " +
            "161001085, " +
            "161001087, " +
            "161001088, " +
            "161001089, " +
            "161001090, " +
            "161001091, " +
            "161001092, " +
            "161001093, " +
            "161001094, " +
            "161001095, " +
            "161001096, " +
            "161001097, " +
            "161001098, " +
            "161001099, " +
            "161001100";

    @RequestMapping(value = "/vk-auth", method = RequestMethod.POST)
    public String vkGetAccessToken(@RequestParam("token") String token) {
        User userFromSession = (User) SecurityContextHolder.getContext().getAuthentication().getPrincipal();
        User user = userService.get(userFromSession.getId());
        String applicationToken = vkService.replaceApplicationTokenFromUri(token);
        user.setVkToken(applicationToken);
        userService.update(user);
        if (user.getAuthorities().contains(new Role("OWNER"))) {
            vkService.setApplicationToken(applicationToken);
        }
        return "redirect:/client";
    }

    //TODO delete after testing vk targeting
    @ResponseBody
    @RequestMapping(value = "/vk-test", method = RequestMethod.GET)
    public String testVkTargeting() throws Exception {
        return vkService.createNewAudience("next");
    }

    //TODO delete after testing vk targeting
    @RequestMapping(value = "/vk-test2", method = RequestMethod.GET)
    public String addUsersToAudience(@RequestParam("id") String id) throws Exception {
        vkService.addUsersToAudience(id, cont);
        return "redirect:/client";
    }

    //TODO delete after testing vk targeting
    @RequestMapping(value = "/vk-test3", method = RequestMethod.GET)
    public String removeUsersFromAudience(@RequestParam("id") String id) throws Exception {
        vkService.removeUsersFromAudience(id, remove);
        return "redirect:/client";
    }
}
